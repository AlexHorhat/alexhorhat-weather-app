{"version":3,"sources":["components/Card/Card.jsx","components/Main/Main.jsx","components/DarkTheme/DarkMode.jsx","components/Search/Search.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["Card","onDelete","instance","className","weather","toLowerCase","src","icon","alt","location","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","temp","min","max","onClick","id","Main","instances","length","breakPoints","width","itemsToShow","itemsToScroll","map","DarkMode","theme","clickedClass","body","document","lightTheme","darkTheme","localStorage","getItem","classList","add","e","replace","target","remove","setItem","switchTheme","Search","api","getInstance","useState","query","setQuery","error","setError","Location","response","this","name","sys","country","Math","round","main","temp_min","temp_max","search","a","errorTooManyLocations","fetchData","data","undefined","fetch","base","key","res","json","cod","errorLocationNotFound","check","forEach","errorLocationAlreadyExists","setTimeout","onChange","value","onKeyPress","type","placeholder","App","setInstance","console","log","previousInstances","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35bb6533.chunk.js","sourcesContent":["import \"./Card.scss\";\r\nimport React from 'react'\r\nimport { RiDeleteBinLine } from 'react-icons/ri';\r\n\r\nconst Card = ({onDelete, instance}) => {\r\n    const dateBuilder = (d) => {\r\n        let months = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n        let days = [\r\n          \"Sunday\",\r\n          \"Monday\",\r\n          \"Tuesday\",\r\n          \"Wednesday\",\r\n          \"Thursday\",\r\n          \"Friday\",\r\n          \"Saturday\",\r\n        ];\r\n    \r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n    \r\n        return `${day} ${date} ${month} ${year}`;\r\n      };\r\n\r\n    return (\r\n        <div className={`weather-instance ${instance.weather.toLowerCase()}`}>\r\n            <span className=\"weather\"> <img src={`./weather/${instance.icon}.png`} alt={instance.weather}/></span>\r\n            <span className=\"city\">{instance.location}</span>\r\n            <span className=\"date\">{dateBuilder(new Date())}</span>\r\n            <span className=\"temp\">{instance.temp}°C</span>\r\n            <span className=\"low-high\">{instance.min}°C / {instance.max}°C</span>\r\n\r\n            <button \r\n            className=\"delete\"\r\n            onClick={() => onDelete(instance.id)}\r\n            ><RiDeleteBinLine className=\"delete-icon\"/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import \"./Main.scss\";\r\nimport React from \"react\";\r\nimport Card from \"../Card/Card\"\r\nimport Carousel from \"react-elastic-carousel\";\r\n\r\nconst Main = ({ instances, onDelete }) => {\r\n\r\n  const breakPoints = [\r\n      {width: 1, itemsToShow: 1, itemsToScroll: 1 },\r\n      {width: 750, itemsToShow: 2, itemsToScroll: 1 },\r\n      {width: 1024, itemsToShow: 3, itemsToScroll: 1 },\r\n      {width: 1200, itemsToShow: 4, itemsToScroll: 1 },\r\n      {width: 1500, itemsToShow: 5, itemsToScroll: 1 },\r\n  ]\r\n\r\n  return (\r\n    <main className=\"main-container\">\r\n      {instances.length >0 && <Carousel breakPoints={breakPoints}>\r\n        {instances.map((instance) => (\r\n          <Card\r\n            key={instance.id}\r\n            onDelete={onDelete}\r\n            instance={instance}\r\n          />\r\n        ))}\r\n      </Carousel>}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport \"./DarkTheme.scss\";\r\n\r\nconst DarkMode = () => {\r\n    let clickedClass = \"clicked\";\r\n    const body = document.body;\r\n    const lightTheme = \"light\";\r\n    const darkTheme = \"dark\";\r\n    let theme;\r\n\r\n    if(localStorage) {\r\n        theme = localStorage.getItem(\"theme\");\r\n    }\r\n\r\n    if (theme === lightTheme || theme === darkTheme) {\r\n        body.classList.add(theme);\r\n    }else{\r\n        body.classList.add(lightTheme);\r\n    }\r\n\r\n    const switchTheme = (e) => {\r\n        if (theme === darkTheme) {\r\n            body.classList.replace(darkTheme, lightTheme);\r\n            e.target.classList.remove(clickedClass);\r\n            localStorage.setItem(\"theme\", \"light\");\r\n            theme = lightTheme;\r\n        }else {\r\n            body.classList.replace(lightTheme, darkTheme);\r\n            e.target.classList.add(clickedClass);\r\n            localStorage.setItem(\"theme\", \"dark\");\r\n            theme = darkTheme;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button \r\n                className = {theme === \"dark\" ? clickedClass: \"\"}\r\n                id=\"darkMode\"\r\n                onClick={(e) => switchTheme(e)}\r\n            ></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DarkMode\r\n","import \"./Search.scss\";\r\nimport React from 'react';\r\nimport DarkMode from '../DarkTheme/DarkMode';\r\nimport { useState } from 'react';\r\nimport { BiSearch } from 'react-icons/bi';\r\n\r\nconst Search = ({api, getInstance, instances}) => {\r\n    const [query, setQuery] = useState('');\r\n    const [error, setError] = useState('');\r\n  \r\n    class Location {\r\n      constructor(response){\r\n        this.id = response.id;\r\n        this.location = `${response.name}, ${response.sys.country} `;\r\n        this.temp = Math.round(response.main.temp);\r\n        this.weather = response.weather[0].main;\r\n        this.min = Math.round(response.main.temp_min);\r\n        this.max = Math.round(response.main.temp_max);\r\n        this.icon = response.weather[0].icon;\r\n      }\r\n    }\r\n\r\n    const search = async (e) => {\r\n      if (instances.length >= 5) {\r\n        errorTooManyLocations();\r\n        return;\r\n      }\r\n      const data = await fetchData();\r\n      setQuery('');\r\n      if (data === undefined){\r\n        return;\r\n      }\r\n      let location = new Location(data);\r\n      getInstance(location);\r\n    }\r\n    \r\n    const fetchData = async () => {\r\n      const res = await fetch(`${api.base}weather?q=${query}&units=metric&appid=${api.key}`)\r\n      const data = await res.json()\r\n  \r\n      if (data.cod === \"404\") {\r\n        errorLocationNotFound();\r\n        return;\r\n      }\r\n      let check = true;\r\n      instances.forEach((instance) => {\r\n        if (instance.id === data.id) {\r\n          errorLocationAlreadyExists();\r\n          check = false;\r\n        }\r\n      })\r\n      if (check === true){\r\n        return data;\r\n      }\r\n    }\r\n    \r\n    const errorLocationNotFound = () => {\r\n      setQuery('');\r\n      setError(\r\n        <div className=\"error\"><p>{query} was not found.</p> <p>Please enter another location or check for typos.</p></div>)\r\n        setTimeout(() => setError(''), 3000);\r\n    };\r\n  \r\n    const errorLocationAlreadyExists = () => {\r\n      setQuery('');\r\n      setError(\r\n        <div className=\"error\"><p>{query} is already a location.</p></div>)\r\n      setTimeout(() => setError(''), 3000);\r\n    };\r\n  \r\n    const errorTooManyLocations = () => {\r\n      setQuery('');\r\n      setError(\r\n        <div className=\"error\">Too many locations. Please delete one.</div>)\r\n      setTimeout(() => setError(''), 3000);\r\n    };\r\n\r\n\r\n    return (\r\n        <header className=\"search-container\">\r\n          <div className=\"search-bar\">\r\n            <input\r\n                className=\"input\"\r\n                onChange={e => setQuery(e.target.value)}\r\n                value={query}\r\n                onKeyPress={(e) => { if (e.key === \"Enter\" && query !== '') { search(e) } }}\r\n                type=\"text\"\r\n                placeholder=\"Search for a location...\"\r\n                />\r\n            <button\r\n              className=\"submit\" \r\n              value={query}\r\n              onClick={(e) => { if (query !== '') search(e)}}\r\n              ><BiSearch /></button>\r\n          </div>\r\n              <DarkMode></DarkMode>\r\n            {error}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import './App.scss';\r\nimport '../Carousel/Carousel.scss';\r\nimport Main from '../Main/Main.jsx';\r\nimport Search from '../Search/Search.jsx';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction App() {\r\n  const api = {\r\n    key: \"3a4015c59fc01878434227ba79fd42ca\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\"\r\n  }\r\n\r\n  const [instances, setInstance] = useState([]);\r\n\r\n  const getInstance = (response) => {\r\n    console.log(response);\r\n    setInstance((previousInstances) =>\r\n    {\r\n      return [...previousInstances, response]\r\n    });\r\n  }\r\n\r\n  const deleteInstance = (id) => {\r\n    setInstance(instances.filter((instance) => instance.id !== id))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Search \r\n        api={api}\r\n        getInstance={getInstance}\r\n        instances={instances}\r\n        />\r\n      {(instances !== undefined) && (\r\n        <Main\r\n          instances={instances}\r\n          onDelete={deleteInstance}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}